<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="titles">
        <item>1. Basic syntax</item>
        <item>2. Idioms</item>
        <item>3. Data types</item>
        <item>4. Conditions and loops</item>
        <item>5. Classes and objects</item>
        <item>6. Functions</item>
    </string-array>

    <string-array name="categories">
        <item>1.1 Package definition and imports</item>
        <item>1.2  Program entry point</item>
        <item>1.3  Print to the standard output</item>
        <item>1.4  Functions</item>
        <item>1.5  Variables</item>
        <item>1.6  Creating classes and instances</item>
        <item>1.7  Comments</item>
        <item>1.8  String templates</item>
        <item>1.9  For loop</item>
        <item>1.10 While loop</item>

        <item>2.1  Create DTOs</item>
        <item>2.2  Default values for function parameters</item>
        <item>2.3  Filter a list</item>
        <item>2.4  Check the presence of an element in a collection</item>
        <item>2.5  String interpolation</item>
        <item>2.6  Instance checks</item>
        <item>2.7   Read-only list</item>
        <item>2.8  Read-only map</item>
        <item>2.9  Access a map entry</item>
        <item>2.10 Traverse a map or a list of pairs</item>
        <item>2.11 Iterate over a ranges</item>
        <item>2.12 Lazy property</item>
        <item>2.13 Extension functions</item>
        <item>2.14 Create a singleton</item>
        <item>2.15 Instantiate an abstract class</item>
        <item>2.16 If-not-null shorthand</item>
        <item>2.17 If-not-null-else shorthand</item>
        <item>2.18 Get first item of a possibly empty collection</item>
        <item>2.19 Map nullable value if not null</item>
        <item>2.20 Return on when statement</item>
        <item>2.21 try-catch expression</item>
        <item>2.22 if expression</item>
        <item>2.23 Builder-style usage of methods that return Unit</item>
        <item>2.24 Single-expression functions</item>
        <item>2.25 Call multiple methods on an object instance</item>
        <item>2.26 Configure properties of an object</item>
        <item>2.27 Java 7\'s try-with-resources</item>
        <item>2.28 Generic function that requires the generic type information</item>
        <item>2.29 Nullable Boolean</item>
        <item>2.30 Swap two variables</item>

        <item>3.1  Integer types</item>
        <item>3.2  Floating-point types</item>
        <item>3.3  Literal constants</item>
        <item>3.4  Numbers representation on the JVM</item>
        <item>3.5  Explicit conversions</item>
        <item>3.6  Operations</item>
        <item>3.7  Division of integers</item>
        <item>3.8  Bitwise operations</item>
        <item>3.9  Floating-point numbers comparison</item>
        <item>3.10 Unsigned integers</item>
        <item>3.11 Booleans</item>
        <item>3.12 Characters</item>
        <item>3.13 Strings</item>
        <item>3.14 String literals</item>
        <item>3.15 Arrays</item>

        <item>4.1  If expression</item>
        <item>4.2  When expression</item>
        <item>4.3  For loops</item>
        <item>4.4  While loops</item>
        <item>4.5  Break and continue labels</item>
        <item>4.6  Return at labels</item>

        <item>5.1  Classes</item>
        <item>5.2  Inheritance</item>
        <item>5.3  Properties</item>
        <item>5.4  Interfaces</item>
        <item>5.5  Functional (SAM) interfaces</item>
        <item>5.6  SAM conversions</item>
        <item>5.7  Functional interfaces vs. type aliases</item>
        <item>5.8  Visibility modifiers</item>
        <item>5.9  Extensions</item>
        <item>5.10 Data classes</item>
        <item>5.11 Sealed classes</item>
        <item>5.12 Enum classes</item>


        <item>6.1  Functions</item>
        <item>6.2  Parameters</item>
        <item>6.3  Default arguments</item>
        <item>6.4  Named arguments</item>
        <item>6.5  Unit-returning functions</item>
        <item>6.6  Single-expression functions</item>
        <item>6.7  Explicit return types</item>
        <item>6.8  Variable number of arguments (Varargs)</item>
        <item>6.9  Infix notation</item>
        <item>6.10 Local functions</item>
        <item>6.11 Generic functions</item>
        <item>6.12 Tail recursive functions</item>
    </string-array>

</resources>